openapi: 3.0.3
info:
  title: Books API
  version: 1.0.0
servers:
- url: https://craftapi-d7d0310369b0.herokuapp.com/
paths:
  /books:
    get:
      operationId: getallbooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Books'
          description: Successful list of books
      summary: Method for get list of books
      tags:
      - Books
      x-accepts: application/json
    post:
      operationId: createbook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: Successful created book
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: missing name field
      summary: Method for add new book
      tags:
      - Books
      x-contentType: application/json
      x-accepts: application/json
  /books/{id}:
    delete:
      operationId: deletebookbyid
      parameters:
      - description: book`s id
        example: 2
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Books'
          description: Successful deleted book by id
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Method for delete book by id
      tags:
      - Books
      x-accepts: application/json
    get:
      operationId: getbookbyid
      parameters:
      - description: book`s id
        example: 2
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: Successful book by id
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Method for get book by id
      tags:
      - Books
      x-accepts: application/json
    put:
      operationId: updatebookbyid
      parameters:
      - description: book`s id
        example: 2
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: Successful updated book by id
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: missing name field
      summary: Method for update book by id
      tags:
      - Books
      x-accepts: application/json
  /authors:
    get:
      operationId: getallauthors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authors'
          description: Successful list of authors
      summary: Method for get all authors
      tags:
      - Authors
      x-accepts: application/json
  /authors/{id}:
    get:
      operationId: getauthorbyid
      parameters:
      - description: author`s id
        example: 2
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: Successful author by id
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Method for get author by id
      tags:
      - Authors
      x-accepts: application/json
components:
  schemas:
    Book:
      example:
        date: 1855-12-10
        author: Connal Macenel
        book: Wild animals
        genre: adventures
        id: 12
      properties:
        id:
          example: 12
          type: integer
        book:
          example: Wild animals
          type: string
        author:
          example: Connal Macenel
          type: string
        genre:
          example: adventures
          type: string
        date:
          example: 1855-12-10
          type: string
      required:
      - author
      - book
      - date
      - genre
      type: object
    Author:
      example:
        date: 1855-12-10
        author: Connal Macenel
        book: Wild animals
        genre: adventures
        id: 12
      properties:
        id:
          example: 12
          type: integer
        book:
          example: Wild animals
          type: string
        author:
          example: Connal Macenel
          type: string
        genre:
          example: adventures
          type: string
        date:
          example: 1855-12-10
          type: string
      required:
      - author
      - book
      - date
      - genre
      type: object
    Books:
      items:
        $ref: '#/components/schemas/Book'
      type: array
    Authors:
      items:
        $ref: '#/components/schemas/Author'
      type: array
    Error:
      properties:
        error:
          type: string
      required:
      - error
      type: object

