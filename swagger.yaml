openapi: 3.0.3
info:
  title: Books API
  version: 1.0.0
servers:
  - url: https://monoapi-87eea2a4128e.herokuapp.com/
paths:
  /books/:
    parameters:
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: filters
        schema:
          type: string

    get:
      responses:
        200:
          description: Successful created book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"




    post:
      summary: Method for add new book
      tags:
        - Books
      operationId: createbook
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookCreated"
      responses:
        "200":
          description: Successful created book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: missing name field
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /order/:
    post:
      tags:
        - Order
      summary: Place order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              "Buy one book with id 30":
                value:
                  order:
                    [{"book_id":5, "quantity": 3}]

      responses:
        "200":
          description: Place order for a book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"




components:
  schemas:
    Book:
      type: object
      required:
        - book
        - author
        - quantity
        - price
      properties:
        id:
          type: integer
          example: 12

        book:
          type: string
          example: Wild animals

        author:
          type: string
          example: Connal Macenel

        quantity:
          type: integer
          example: 10

        price:
          type: integer
          example: 1000


    BookCreated:
      type: object
      required:
        - book
        - author
        - quantity
        - price
      properties:
        book:
          type: string
          example: Wild animals

        author:
          type: string
          example: Connal Macenel

        quantity:
          type: integer
          example: 10

        price:
          type: integer
          example: 1000




    Books:
      type: array
      items:
        $ref: "#/components/schemas/Book"

    Order:
      type: object
      required:
        - order
      properties:
        order:
          type: array
          items:
            type: object
            required:
              - book_id
              - quantity
            properties:
              book_id:
                type: integer
                example: 11
              quantity:
                type: integer
                example: 5

    OrderResponse:
      type: object
      properties:
        order_id:
          type: integer
          example: 100


    Error:
      type: object
      required:
       - error
      properties:
        error:
          type: string